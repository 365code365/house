generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// 公司信息模型
/// 存储系统使用公司的基本信息
model Company {
  /// 公司ID，主键，自增
  id        Int     @id @default(autoincrement())
  /// 公司名称
  name      String  @db.VarChar(100)
  /// 公司账号ID
  accountId String  @map("account_id") @db.VarChar(50)
  /// 公司登录密码
  password  String  @db.VarChar(100)
  /// 公司地址（可选）
  address   String? @db.Text
  /// 公司税号（可选）
  taxId     String? @map("tax_id") @db.VarChar(20)
  /// 公司联系电话（可选）
  phone     String? @map("phone") @db.VarChar(20)

  @@map("company")
}

/// 房地产项目模型
/// 存储每个房地产项目的基本信息
model Project {
  /// 项目ID，主键，自增
  id                    Int                    @id @default(autoincrement())
  /// 项目名称，唯一
  name                  String                 @unique(map: "uk_name") @db.VarChar(100)
  /// 项目主图片URL（可选）
  mainImage             String?                @map("main_image") @db.VarChar(255)
  /// 项目创建时间
  createdAt             DateTime               @default(now()) @map("created_at")
  /// 项目最后更新时间
  updatedAt             DateTime               @default(now()) @updatedAt @map("updated_at")
  budgetPlans           BudgetPlan[]
  commissionLists       CommissionList[]
  customerAppointments  CustomerAppointment[]
  depositManagements    DepositManagement[]
  expenseManagements    ExpenseManagement[]
  handoverManagements   HandoverManagement[]
  parkingSpaces         ParkingSpace[]
  purchasedCustomers    PurchasedCustomer[]
  salesControl          SalesControl[]
  visitorQuestionnaires VisitorQuestionnaire[]
  withdrawalRecords     WithdrawalRecord[]

  @@map("project")
}

/// 销售人员模型
/// 存储销售人员的基本信息和权限
model SalesPersonnel {
  /// 销售人员ID，主键，自增
  id                   Int                   @id @default(autoincrement())
  /// 员工编号，唯一
  employeeNo           String                @unique(map: "uk_employee_no") @map("employee_no") @db.VarChar(50)
  /// 销售人员姓名
  name                 String                @db.VarChar(50)
  /// 电子邮箱，唯一
  email                String                @unique(map: "uk_email") @db.VarChar(100)
  /// 登录密码
  password             String                @db.VarChar(100)
  /// 联系电话（可选）
  phone                String?               @map("phone") @db.VarChar(20)
  /// 可访问的项目ID列表，逗号分隔（可选）
  projectIds           String?               @map("project_ids") @db.VarChar(255)
  /// 备注信息（可选）
  remark               String?               @db.Text
  /// 创建时间
  createdAt            DateTime              @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt            DateTime              @default(now()) @updatedAt @map("updated_at")
  commissionLists      CommissionList[]
  customerAppointments CustomerAppointment[]
  purchasedCustomers   PurchasedCustomer[]
  salesControl         SalesControl[]

  @@map("sales_personnel")
}

/// 销控管理模型
/// 存储房屋销售控制的核心数据
model SalesControl {
  /// 销控记录ID，主键，自增
  id                  Int                     @id @default(autoincrement())
  /// 房屋编号
  houseNo             String                  @map("house_no") @db.VarChar(50)
  /// 楼栋号
  building            String                  @db.VarChar(10)
  /// 楼层号
  floor               Int
  /// 单元号
  unit                String                  @db.VarChar(10)
  /// 房屋面积（平方米，可选）
  area                Decimal?                @db.Decimal(10, 2)
  /// 单价（元/平方米，可选）
  unitPrice           Decimal?                @map("unit_price") @db.Decimal(15, 2)
  /// 房屋总价（元，可选）
  houseTotal          Decimal?                @map("house_total") @db.Decimal(15, 2)
  /// 含停车位总价（元，可选）
  totalWithParking    Decimal?                @map("total_with_parking") @db.Decimal(15, 2)
  /// 销售状态
  salesStatus         SalesControlSalesStatus @map("sales_status")
  /// 销售日期（可选）
  salesDate           DateTime?               @map("sales_date") @db.Date
  /// 订金日期（可选）
  depositDate         DateTime?               @map("deposit_date") @db.Date
  /// 签约日期（可选）
  signDate            DateTime?               @map("sign_date") @db.Date
  /// 买家姓名（可选）
  buyer               String?                 @db.VarChar(255)
  /// 销售人员ID（可选）
  salesId             String?                 @map("sales_id") @db.VarChar(50)
  /// 关联停车位ID列表，逗号分隔（可选）
  parkingIds          String?                 @map("parking_ids") @db.VarChar(255)
  /// 是否有客户变更（可选）
  customChange        Boolean?                @map("custom_change")
  /// 客户变更内容（可选）
  customChangeContent String?                 @map("custom_change_content") @db.Text
  /// 媒体来源（可选）
  mediaSource         String?                 @map("media_source") @db.VarChar(100)
  /// 介绍人（可选）
  introducer          String?                 @db.VarChar(100)
  /// 备注信息（可选）
  notes               String?                 @db.Text
  /// 基础价格（元，可选）
  basePrice           Decimal?                @map("base_price") @db.Decimal(15, 2)
  /// 溢价率（百分比，可选）
  premiumRate         Decimal?                @map("premium_rate") @db.Decimal(10, 2)
  /// 所属项目ID
  projectId           Int                     @map("project_id")
  /// 创建时间
  createdAt           DateTime                @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt           DateTime                @default(now()) @updatedAt @map("updated_at")
  project             Project                 @relation(fields: [projectId], references: [id])
  salesPersonnel      SalesPersonnel?         @relation(fields: [salesId], references: [employeeNo])

  @@unique([projectId, houseNo])
  @@index([projectId], map: "idx_project")
  @@index([salesId], map: "idx_sales_person")
  @@map("sales_control")
}

/// 停车位管理模型
/// 存储停车位的基本信息和销售状态
model ParkingSpace {
  /// 停车位ID，主键，自增
  id          Int                     @id @default(autoincrement())
  /// 停车位编号
  parkingNo   String                  @map("parking_no") @db.VarChar(50)
  /// 停车位类型（可选）
  type        ParkingSpaceType?
  /// 停车位价格（元）
  price       Decimal                 @db.Decimal(15, 2)
  /// 销售状态，默认可售
  salesStatus ParkingSpaceSalesStatus @default(AVAILABLE) @map("sales_status")
  /// 销售日期（可选）
  salesDate   DateTime?               @map("sales_date") @db.Date
  /// 买家姓名（可选）
  buyer       String?                 @db.VarChar(255)
  /// 备注信息（可选）
  remark      String?                 @db.Text
  /// 所属项目ID
  projectId   Int                     @map("project_id")
  /// 创建时间
  createdAt   DateTime                @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt   DateTime                @default(now()) @updatedAt @map("updated_at")
  /// 停车位位置描述（可选）
  location    String?                 @db.VarChar(100)
  /// 销售人员ID（可选）
  salesId     String?                 @map("sales_id") @db.VarChar(50)
  project     Project                 @relation(fields: [projectId], references: [id])

  @@unique([projectId, parkingNo])
  @@index([projectId], map: "idx_project")
  @@map("parking_space")
}

/// 客户预约模型
/// 存储客户看房预约信息
model CustomerAppointment {
  /// 预约ID，主键，自增
  id             Int                       @id @default(autoincrement())
  /// 客户姓名
  customerName   String                    @map("customer_name") @db.VarChar(100)
  /// 客户联系电话
  phone          String                    @db.VarChar(20)
  /// 预约开始时间
  startTime      DateTime                  @map("start_time")
  /// 预约结束时间
  endTime        DateTime                  @map("end_time")
  /// 预约状态，默认待确认
  status         CustomerAppointmentStatus @default(PENDING)
  /// 备注信息（可选）
  remark         String?                   @db.Text
  /// 所属项目ID
  projectId      Int                       @map("project_id")
  /// 创建时间
  createdAt      DateTime                  @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt      DateTime                  @default(now()) @updatedAt @map("updated_at")
  /// 负责销售人员ID
  salesId        String                    @map("sales_id") @db.VarChar(50)
  project        Project                   @relation(fields: [projectId], references: [id])
  salesPersonnel SalesPersonnel            @relation(fields: [salesId], references: [employeeNo])

  @@index([salesId])
  @@index([projectId], map: "customer_appointment_project_id_fkey")
  @@map("customer_appointment")
}

/// 已购客户模型
/// 存储已购买房屋的客户详细信息
model PurchasedCustomer {
  /// 客户ID，主键，自增
  id                Int             @id @default(autoincrement())
  /// 客户姓名
  name              String          @db.VarChar(100)
  /// 购买的房屋编号
  houseNo           String          @map("house_no") @db.VarChar(50)
  /// 购买日期（可选）
  purchaseDate      DateTime?       @map("purchase_date") @db.Date
  /// 身份证号（可选）
  idCard            String?         @map("id_card") @db.VarChar(50)
  /// 是否为企业客户，默认否
  isCorporate       Boolean         @default(false) @map("is_corporate")
  /// 电子邮箱（可选）
  email             String?         @db.VarChar(100)
  /// 联系电话（可选）
  phone             String?         @db.VarChar(20)
  /// 年龄（可选）
  age               Int?
  /// 职业（可选）
  occupation        String?         @db.VarChar(100)
  /// 户籍地址（可选）
  registeredAddress String?         @map("registered_address") @db.Text
  /// 通讯地址（可选）
  mailingAddress    String?         @map("mailing_address") @db.Text
  /// 备注信息（可选）
  remark            String?         @db.Text
  /// 客户评级（可选）
  rating            CustomerRating?
  /// 所属项目ID
  projectId         Int             @map("project_id")
  /// 创建时间
  createdAt         DateTime        @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt         DateTime        @default(now()) @updatedAt @map("updated_at")
  /// 销售人员ID（可选）
  salesId           String?         @map("sales_id") @db.VarChar(50)
  project           Project         @relation(fields: [projectId], references: [id])
  salesPersonnel    SalesPersonnel? @relation(fields: [salesId], references: [employeeNo])

  @@index([houseNo], map: "idx_house_no")
  @@index([projectId], map: "purchased_customer_project_id_fkey")
  @@index([salesId], map: "idx_sales_person")
  @@map("purchased_customer")
}

/// 访客问卷模型
/// 存储访客填写的需求调查问卷
model VisitorQuestionnaire {
  /// 问卷ID，主键，自增
  id                  Int               @id @default(autoincrement())
  /// 问卷填写日期
  questionnaireDate   DateTime          @map("questionnaire_date") @db.Date
  /// 访客姓名（可选）
  name                String?           @db.VarChar(100)
  /// 年龄（可选）
  age                 Int?
  /// 性别（可选）
  gender              Gender?
  /// 固定电话（可选）
  landline            String?           @db.VarChar(20)
  /// 手机号码（可选）
  phone               String?           @db.VarChar(20)
  /// 电子邮箱（可选）
  email               String?           @db.VarChar(100)
  /// 职业（可选）
  occupation          String?           @db.VarChar(100)
  /// 接待人员ID（可选）
  receptionistId      String?           @map("receptionist_id") @db.VarChar(50)
  /// 看中的房屋（可选）
  visitedHouse        String?           @map("visited_house") @db.VarChar(100)
  /// 购买时间规划（可选）
  purchaseTimeline    PurchaseTimeline? @map("purchase_timeline")
  /// 需求类型（可选）
  demandType          DemandType?       @map("demand_type")
  /// 理想面积（可选）
  idealArea           IdealArea?        @map("ideal_area")
  /// 房间需求（可选）
  roomDemand          RoomDemand?       @map("room_demand")
  /// 预算范围（可选）
  budgetRange         String?           @map("budget_range") @db.VarChar(100)
  /// 考虑因素（可选）
  considerations      String?           @db.Text
  /// 满意度因素（可选）
  satisfactionFactors String?           @map("satisfaction_factors") @db.Text
  /// 居住区域（可选）
  residenceArea       String?           @map("residence_area") @db.VarChar(100)
  /// 购买动机（可选）
  purchaseMotive      PurchaseMotive?   @map("purchase_motive")
  /// 信息来源（可选）
  infoSources         String?           @map("info_sources") @db.Text
  /// 客户评级（可选）
  rating              CustomerRating?
  /// 所属项目ID
  projectId           Int               @map("project_id")
  /// 创建时间
  createdAt           DateTime          @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt           DateTime          @default(now()) @updatedAt @map("updated_at")
  project             Project           @relation(fields: [projectId], references: [id])

  @@index([receptionistId], map: "idx_receptionist")
  @@index([projectId], map: "visitor_questionnaire_project_id_fkey")
  @@map("visitor_questionnaire")
}

/// 退户记录模型
/// 存储客户退户的相关信息
model WithdrawalRecord {
  /// 退户记录ID，主键，自增
  id             Int                    @id @default(autoincrement())
  /// 客户姓名
  customerName   String                 @map("customer_name") @db.VarChar(100)
  /// 楼栋号
  building       String                 @db.VarChar(10)
  /// 楼层号
  floor          Int
  /// 单元号
  unit           String                 @db.VarChar(10)
  /// 退户状态
  status         WithdrawalRecordStatus
  /// 退户原因（可选）
  reason         String?                @db.VarChar(100)
  /// 退户日期
  withdrawalDate DateTime               @map("withdrawal_date") @db.Date
  /// 房屋价格（元，可选）
  housePrice     Decimal?               @map("house_price") @db.Decimal(15, 2)
  /// 单价（元/平方米，可选）
  unitPrice      Decimal?               @map("unit_price") @db.Decimal(15, 2)
  /// 停车位价格（元，可选）
  parkingPrice   Decimal?               @map("parking_price") @db.Decimal(15, 2)
  /// 总价格（元，可选）
  totalPrice     Decimal?               @map("total_price") @db.Decimal(15, 2)
  /// 房屋编号（可选）
  houseNo        String?                @map("house_no") @db.VarChar(50)
  /// 所属项目ID
  projectId      Int                    @map("project_id")
  /// 创建时间
  createdAt      DateTime               @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt      DateTime               @default(now()) @updatedAt @map("updated_at")
  project        Project                @relation(fields: [projectId], references: [id])

  @@index([projectId], map: "withdrawal_record_project_id_fkey")
  @@map("withdrawal_record")
}

/// 预算计划模型
/// 存储项目的预算规划信息
model BudgetPlan {
  /// 预算计划ID，主键，自增
  id            Int      @id @default(autoincrement())
  /// 预算类别
  category      String   @db.VarChar(100)
  /// 预算项目（可选）
  item          String?  @db.VarChar(100)
  /// 预算金额（元）
  budget        Decimal  @db.Decimal(15, 2)
  /// 实际支出（元），默认0
  actualExpense Decimal  @default(0.00) @map("actual_expense") @db.Decimal(15, 2)
  /// 数量，默认1
  quantity      Int      @default(1)
  /// 单位（可选）
  unit          String?  @db.VarChar(20)
  /// 单价（元，可选）
  unitPrice     Decimal? @map("unit_price") @db.Decimal(15, 2)
  /// 供应商（可选）
  vendor        String?  @db.VarChar(100)
  /// 执行率（百分比，可选）
  executionRate Decimal? @map("execution_rate") @db.Decimal(10, 2)
  /// 备注信息（可选）
  remark        String?  @db.Text
  /// 所属项目ID
  projectId     Int      @map("project_id")
  /// 创建时间
  createdAt     DateTime @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  project       Project  @relation(fields: [projectId], references: [id])

  @@index([projectId], map: "budget_plan_project_id_fkey")
  @@map("budget_plan")
}

/// 费用管理模型
/// 存储项目的实际费用支出记录
model ExpenseManagement {
  /// 费用记录ID，主键，自增
  id            Int      @id @default(autoincrement())
  /// 费用发生日期
  expenseDate   DateTime @map("expense_date") @db.Date
  /// 费用类别
  category      String   @db.VarChar(100)
  /// 费用项目（可选）
  item          String?  @db.VarChar(100)
  /// 实际支出金额（元），默认0
  actualExpense Decimal  @default(0.00) @map("actual_expense") @db.Decimal(15, 2)
  /// 数量，默认1
  quantity      Int      @default(1)
  /// 单位（可选）
  unit          String?  @db.VarChar(20)
  /// 单价（元，可选）
  unitPrice     Decimal? @map("unit_price") @db.Decimal(15, 2)
  /// 供应商（可选）
  vendor        String?  @db.VarChar(100)
  /// 发票号码（可选）
  invoiceNo     String?  @map("invoice_no") @db.VarChar(50)
  /// 备注信息（可选）
  remark        String?  @db.Text
  /// 所属项目ID
  projectId     Int      @map("project_id")
  /// 创建时间
  createdAt     DateTime @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  project       Project  @relation(fields: [projectId], references: [id])

  @@index([projectId], map: "expense_management_project_id_fkey")
  @@index([category], map: "idx_category")
  @@map("expense_management")
}

/// 佣金列表模型
/// 存储销售人员的佣金计算和发放记录
model CommissionList {
  /// 佣金记录ID，主键，自增
  id                  Int                  @id @default(autoincrement())
  /// 楼栋号
  building            String               @db.VarChar(10)
  /// 房屋面积（平方米，可选）
  area                Decimal?             @db.Decimal(10, 2)
  /// 楼层号
  floor               Int
  /// 单元号
  unit                String               @db.VarChar(10)
  /// 佣金状态
  status              CommissionListStatus
  /// 销售日期（可选）
  salesDate           DateTime?            @map("sales_date") @db.Date
  /// 总价格（元，可选）
  totalPrice          Decimal?             @map("total_price") @db.Decimal(15, 2)
  /// 总佣金率（百分比），默认0
  totalCommissionRate Decimal              @default(0.00) @map("total_commission_rate") @db.Decimal(10, 2)
  /// 总佣金金额（元），默认0
  totalCommission     Decimal              @default(0.00) @map("total_commission") @db.Decimal(15, 2)
  /// 房屋编号（可选）
  houseNo             String?              @map("house_no") @db.VarChar(50)
  /// 所属项目ID
  projectId           Int                  @map("project_id")
  /// 创建时间
  createdAt           DateTime             @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt           DateTime             @default(now()) @updatedAt @map("updated_at")
  /// 销售人员ID
  salesId             String               @map("sales_id") @db.VarChar(50)
  commissionDetails   CommissionDetails[]
  project             Project              @relation(fields: [projectId], references: [id])
  salesPersonnel      SalesPersonnel       @relation(fields: [salesId], references: [employeeNo])

  @@index([salesId])
  @@index([projectId], map: "commission_list_project_id_fkey")
  @@map("commission_list")
}

/// 佣金明细模型
/// 存储佣金的分期发放明细
model CommissionDetails {
  /// 佣金明细ID，主键，自增
  id             Int                     @id @default(autoincrement())
  /// 佣金记录ID
  commissionId   Int                     @map("commission_id")
  /// 佣金期数
  commissionNo   Int                     @map("commission_no")
  /// 佣金率（百分比）
  rate           Decimal                 @db.Decimal(10, 2)
  /// 佣金状态，默认未发放
  status         CommissionDetailsStatus @default(NOT_COMMISSIONED)
  /// 佣金金额（元）
  amount         Decimal                 @db.Decimal(15, 2)
  /// 备注信息（可选）
  remark         String?                 @db.Text
  /// 创建时间
  createdAt      DateTime                @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt      DateTime                @default(now()) @updatedAt @map("updated_at")
  commissionList CommissionList          @relation(fields: [commissionId], references: [id])

  @@unique([commissionId, commissionNo], map: "uk_commission_no")
  @@index([commissionId])
  @@map("commission_details")
}

/// 订金管理模型
/// 存储客户订金的收取和跟踪信息
model DepositManagement {
  /// 订金记录ID，主键，自增
  id            Int                     @id @default(autoincrement())
  /// 买家姓名
  buyer         String                  @db.VarChar(100)
  /// 订金金额（元）
  amount        Decimal                 @db.Decimal(15, 2)
  /// 付款状态，默认未付款
  paymentStatus DepositManagementStatus @default(UNPAID) @map("payment_status")
  /// 付款日期（可选）
  paymentDate   DateTime?               @map("payment_date") @db.Date
  /// 到期日期
  dueDate       DateTime                @map("due_date") @db.Date
  /// 是否自动提醒，默认是
  autoRemind    Boolean                 @default(true) @map("auto_remind")
  /// 备注信息（可选）
  remark        String?                 @db.Text
  /// 房屋编号（可选）
  houseNo       String?                 @map("house_no") @db.VarChar(50)
  /// 所属项目ID
  projectId     Int                     @map("project_id")
  /// 创建时间
  createdAt     DateTime                @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt     DateTime                @default(now()) @updatedAt @map("updated_at")
  project       Project                 @relation(fields: [projectId], references: [id])

  @@index([projectId], map: "deposit_management_project_id_fkey")
  @@index([houseNo], map: "idx_house_no")
  @@map("deposit_management")
}

/// 交房管理模型
/// 存储房屋交付的相关信息和进度
model HandoverManagement {
  /// 交房记录ID，主键，自增
  id              Int                      @id @default(autoincrement())
  /// 买家姓名
  buyer           String                   @db.VarChar(100)
  /// 房屋编号
  houseNo         String                   @map("house_no") @db.VarChar(50)
  /// 实际交房日期（可选）
  handoverDate    DateTime?                @map("handover_date") @db.Date
  /// 备注信息（可选）
  remark          String?                  @db.Text
  /// 所属项目ID
  projectId       Int                      @map("project_id")
  /// 创建时间
  createdAt       DateTime                 @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt       DateTime                 @default(now()) @updatedAt @map("updated_at")
  /// 完工项目清单（可选）
  completionItems String?                  @map("completion_items") @db.Text
  /// 缺陷项目清单（可选）
  defectItems     String?                  @map("defect_items") @db.Text
  /// 计划交房日期（可选）
  scheduledDate   DateTime?                @map("scheduled_date") @db.Date
  /// 交房状态，默认待点交
  status          HandoverManagementStatus @default(PENDING)
  project         Project                  @relation(fields: [projectId], references: [id])

  @@index([houseNo])
  @@index([projectId], map: "handover_management_project_id_fkey")
  @@map("handover_management")
}

/// 销控销售状态枚举
enum SalesControlSalesStatus {
  /// 房屋已售出
  SOLD      @map("售出")
  /// 客户已付订金
  DEPOSIT   @map("訂金")
  /// 房屋不对外销售
  NOT_SALE  @map("不銷售")
  /// 房屋可售
  AVAILABLE @map("未售出")
}

/// 停车位类型枚举
enum ParkingSpaceType {
  /// 平面停车位
  FLAT            @map("平面")
  /// 机械式上层停车位
  MECHANICAL_TOP  @map("機械上層")
  /// 机械式中层停车位
  MECHANICAL_MID  @map("機械中層")
  /// 机械式下层停车位
  MECHANICAL_BOT  @map("機械下層")
  /// 机械式平移停车位
  MECHANICAL_MOVE @map("機械平移")
  /// 摩托车停车位
  MOTORCYCLE      @map("機車位")
  /// 自行车停车位
  BICYCLE         @map("腳踏車位")
  /// 自建停车位
  SELF_BUILT      @map("自設")
  /// 法定停车位
  LEGAL           @map("法定")
}

/// 停车位销售状态枚举
enum ParkingSpaceSalesStatus {
  /// 停车位已售出
  SOLD      @map("售出")
  /// 客户已付订金
  DEPOSIT   @map("訂金")
  /// 停车位不对外销售
  NOT_SALE  @map("不銷售")
  /// 停车位可售
  AVAILABLE @map("未售出")
}

/// 客户预约状态枚举
enum CustomerAppointmentStatus {
  /// 预约待确认
  PENDING   @map("待確認")
  /// 预约已确认
  CONFIRMED @map("已確認")
  /// 预约已完成
  COMPLETED @map("已完成")
  /// 预约已取消
  CANCELLED @map("已取消")
}

/// 客户评级枚举
enum CustomerRating {
  /// S级客户（最高级别）
  S
  /// A级客户（高级别）
  A
  /// B级客户（中级别）
  B
  /// C级客户（低级别）
  C
  /// D级客户（最低级别）
  D
}

/// 性别枚举
enum Gender {
  /// 男性
  MALE    @map("男")
  /// 女性
  FEMALE  @map("女")
  /// 不透露性别
  PRIVATE @map("不透露")
}

/// 购买时间规划枚举
enum PurchaseTimeline {
  /// 半年内购买
  HALF_YEAR @map("半年內")
  /// 一年内购买
  ONE_YEAR  @map("一年內")
  /// 其他时间规划
  OTHER     @map("其他")
}

/// 需求类型枚举
enum DemandType {
  /// 结构体（毛坯房）
  STRUCTURE @map("結構體")
  /// 成屋（精装房）
  FINISHED  @map("成屋")
  /// 预售屋
  PRESALE   @map("預售屋")
}

/// 理想面积枚举
enum IdealArea {
  /// 21坪以下
  UNDER_21   @map("21坪以下")
  /// 21-30坪
  AREA_21_30 @map("21-30坪")
  /// 31-40坪
  AREA_31_40 @map("31-40坪")
  /// 41-50坪
  AREA_41_50 @map("41-50坪")
  /// 51坪以上
  OVER_51    @map("51坪以上")
  /// 其他面积
  OTHER      @map("其他")
}

/// 房间需求枚举
enum RoomDemand {
  /// 二房
  TWO_ROOM   @map("二房")
  /// 三房
  THREE_ROOM @map("三房")
  /// 四房
  FOUR_ROOM  @map("四房")
  /// 店面
  SHOP       @map("店面")
  /// 其他房间需求
  OTHER      @map("其他")
}

/// 购买动机枚举
enum PurchaseMotive {
  /// 首次购房
  FIRST_BUY    @map("首購")
  /// 换房改善
  UPGRADE      @map("換屋")
  /// 投资置产
  INVESTMENT   @map("投資置產")
  /// 为子女购房
  FOR_CHILDREN @map("為子女購屋")
  /// 其他动机
  OTHER        @map("其他")
}

/// 退户记录状态枚举
enum WithdrawalRecordStatus {
  /// 已申请退户
  APPLIED    @map("已申請")
  /// 退户处理中
  PROCESSING @map("處理中")
  /// 退户已完成
  COMPLETED  @map("已完成")
  /// 退户申请已取消
  CANCELLED  @map("已取消")
}

/// 佣金列表状态枚举
enum CommissionListStatus {
  /// 房屋已售出
  SOLD    @map("售出")
  /// 客户已付订金
  DEPOSIT @map("訂金")
}

/// 佣金明细状态枚举
enum CommissionDetailsStatus {
  /// 佣金已申请
  COMMISSIONED     @map("已請傭")
  /// 佣金未申请
  NOT_COMMISSIONED @map("未請傭")
}

/// 订金管理状态枚举
enum DepositManagementStatus {
  /// 订金已结清
  PAID         @map("已結清")
  /// 部分付款
  PARTIAL_PAID @map("部分付款")
  /// 未付款
  UNPAID       @map("未付款")
  /// 付款逾期
  OVERDUE      @map("逾期")
}

/// 交房管理状态枚举
enum HandoverManagementStatus {
  /// 待点交
  PENDING     @map("待點交")
  /// 点交进行中
  IN_PROGRESS @map("點交中")
  /// 点交已完成
  COMPLETED   @map("已完成")
  /// 点交延期
  DELAYED     @map("延期")
}

/// 用户角色枚举
enum UserRole {
  /// 超级管理员
  SUPER_ADMIN      @map("超級管理員")
  /// 管理员
  ADMIN            @map("管理員")
  /// 销售经理
  SALES_MANAGER    @map("銷售經理")
  /// 销售人员
  SALES_PERSON     @map("銷售人員")
  /// 财务人员
  FINANCE          @map("財務人員")
  /// 客服人员
  CUSTOMER_SERVICE @map("客服人員")
  /// 普通用户
  USER             @map("普通用戶")
}

/// 用户模型
/// 存储系统用户的基本信息和权限
model User {
  /// 用户ID，主键，自增
  id          Int       @id @default(autoincrement())
  /// 用户名，唯一
  username    String    @unique @db.VarChar(50)
  /// 用户邮箱，唯一
  email       String    @unique @db.VarChar(100)
  /// 用户密码（加密后）
  password    String    @db.VarChar(255)
  /// 用户真实姓名
  name        String    @db.VarChar(100)
  /// 用户角色
  role        UserRole  @default(USER)
  /// 用户头像URL（可选）
  avatar      String?   @db.VarChar(255)
  /// 联系电话（可选）
  phone       String?   @db.VarChar(20)
  /// 部门（可选）
  department  String?   @db.VarChar(100)
  /// 职位（可选）
  position    String?   @db.VarChar(100)
  /// 可访问的项目ID列表，逗号分隔（可选）
  projectIds  String?   @map("project_ids") @db.VarChar(255)
  /// 账户是否激活
  isActive    Boolean   @default(true) @map("is_active")
  /// 最后登录时间（可选）
  lastLoginAt DateTime? @map("last_login_at")
  /// 创建时间
  createdAt   DateTime  @default(now()) @map("created_at")
  /// 最后更新时间
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")

  @@map("user")
}
